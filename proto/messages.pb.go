// Code generated by protoc-gen-go. DO NOT EDIT.
// source: messages.proto

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	messages.proto

It has these top-level messages:
	HttpLoggerRequest
	StringArr
	DateTime
	MapInterface
	HttpLoggerResponse
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

type HttpLoggerRequest struct {
	BasePath      string            `protobuf:"bytes,1,opt,name=base_path,json=basePath" json:"base_path,omitempty"`
	ElapsedTime   float32           `protobuf:"fixed32,2,opt,name=elapsed_time,json=elapsedTime" json:"elapsed_time,omitempty"`
	Host          string            `protobuf:"bytes,3,opt,name=host" json:"host,omitempty"`
	Ip            string            `protobuf:"bytes,4,opt,name=ip" json:"ip,omitempty"`
	Method        string            `protobuf:"bytes,5,opt,name=method" json:"method,omitempty"`
	RequestBody   []byte            `protobuf:"bytes,6,opt,name=request_body,json=requestBody,proto3" json:"request_body,omitempty"`
	RequestHeader []string          `protobuf:"bytes,7,rep,name=request_header,json=requestHeader" json:"request_header,omitempty"`
	Version       string            `protobuf:"bytes,8,opt,name=version" json:"version,omitempty"`
	Uri           string            `protobuf:"bytes,9,opt,name=uri" json:"uri,omitempty"`
	Protocol      string            `protobuf:"bytes,10,opt,name=protocol" json:"protocol,omitempty"`
	Time          *DateTime         `protobuf:"bytes,11,opt,name=time" json:"time,omitempty"`
	Key           string            `protobuf:"bytes,12,opt,name=key" json:"key,omitempty"`
	ResponseBody  []byte            `protobuf:"bytes,13,opt,name=response_body,json=responseBody,proto3" json:"response_body,omitempty"`
	RequestId     string            `protobuf:"bytes,14,opt,name=request_id,json=requestId" json:"request_id,omitempty"`
	Properties    map[string]string `protobuf:"bytes,15,rep,name=properties" json:"properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Tags          []string          `protobuf:"bytes,16,rep,name=tags" json:"tags,omitempty"`
	Status        string            `protobuf:"bytes,17,opt,name=status" json:"status,omitempty"`
	ServicePath   string            `protobuf:"bytes,18,opt,name=service_path,json=servicePath" json:"service_path,omitempty"`
	Metadata      map[string]string `protobuf:"bytes,19,rep,name=metadata" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *HttpLoggerRequest) Reset()                    { *m = HttpLoggerRequest{} }
func (m *HttpLoggerRequest) String() string            { return proto1.CompactTextString(m) }
func (*HttpLoggerRequest) ProtoMessage()               {}
func (*HttpLoggerRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *HttpLoggerRequest) GetBasePath() string {
	if m != nil {
		return m.BasePath
	}
	return ""
}

func (m *HttpLoggerRequest) GetElapsedTime() float32 {
	if m != nil {
		return m.ElapsedTime
	}
	return 0
}

func (m *HttpLoggerRequest) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *HttpLoggerRequest) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *HttpLoggerRequest) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

func (m *HttpLoggerRequest) GetRequestBody() []byte {
	if m != nil {
		return m.RequestBody
	}
	return nil
}

func (m *HttpLoggerRequest) GetRequestHeader() []string {
	if m != nil {
		return m.RequestHeader
	}
	return nil
}

func (m *HttpLoggerRequest) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *HttpLoggerRequest) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *HttpLoggerRequest) GetProtocol() string {
	if m != nil {
		return m.Protocol
	}
	return ""
}

func (m *HttpLoggerRequest) GetTime() *DateTime {
	if m != nil {
		return m.Time
	}
	return nil
}

func (m *HttpLoggerRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *HttpLoggerRequest) GetResponseBody() []byte {
	if m != nil {
		return m.ResponseBody
	}
	return nil
}

func (m *HttpLoggerRequest) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

func (m *HttpLoggerRequest) GetProperties() map[string]string {
	if m != nil {
		return m.Properties
	}
	return nil
}

func (m *HttpLoggerRequest) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *HttpLoggerRequest) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *HttpLoggerRequest) GetServicePath() string {
	if m != nil {
		return m.ServicePath
	}
	return ""
}

func (m *HttpLoggerRequest) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

type StringArr struct {
	Value []string `protobuf:"bytes,1,rep,name=value" json:"value,omitempty"`
}

func (m *StringArr) Reset()                    { *m = StringArr{} }
func (m *StringArr) String() string            { return proto1.CompactTextString(m) }
func (*StringArr) ProtoMessage()               {}
func (*StringArr) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *StringArr) GetValue() []string {
	if m != nil {
		return m.Value
	}
	return nil
}

type DateTime struct {
	Year  string `protobuf:"bytes,1,opt,name=year" json:"year,omitempty"`
	Month string `protobuf:"bytes,2,opt,name=month" json:"month,omitempty"`
	Day   string `protobuf:"bytes,3,opt,name=day" json:"day,omitempty"`
	Hour  string `protobuf:"bytes,4,opt,name=hour" json:"hour,omitempty"`
	Min   string `protobuf:"bytes,5,opt,name=min" json:"min,omitempty"`
	Sec   string `protobuf:"bytes,6,opt,name=sec" json:"sec,omitempty"`
}

func (m *DateTime) Reset()                    { *m = DateTime{} }
func (m *DateTime) String() string            { return proto1.CompactTextString(m) }
func (*DateTime) ProtoMessage()               {}
func (*DateTime) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *DateTime) GetYear() string {
	if m != nil {
		return m.Year
	}
	return ""
}

func (m *DateTime) GetMonth() string {
	if m != nil {
		return m.Month
	}
	return ""
}

func (m *DateTime) GetDay() string {
	if m != nil {
		return m.Day
	}
	return ""
}

func (m *DateTime) GetHour() string {
	if m != nil {
		return m.Hour
	}
	return ""
}

func (m *DateTime) GetMin() string {
	if m != nil {
		return m.Min
	}
	return ""
}

func (m *DateTime) GetSec() string {
	if m != nil {
		return m.Sec
	}
	return ""
}

type MapInterface struct {
	TypeUrl string `protobuf:"bytes,1,opt,name=type_url,json=typeUrl" json:"type_url,omitempty"`
	Value   []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (m *MapInterface) Reset()                    { *m = MapInterface{} }
func (m *MapInterface) String() string            { return proto1.CompactTextString(m) }
func (*MapInterface) ProtoMessage()               {}
func (*MapInterface) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *MapInterface) GetTypeUrl() string {
	if m != nil {
		return m.TypeUrl
	}
	return ""
}

func (m *MapInterface) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type HttpLoggerResponse struct {
	Id      string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Success bool   `protobuf:"varint,2,opt,name=success" json:"success,omitempty"`
}

func (m *HttpLoggerResponse) Reset()                    { *m = HttpLoggerResponse{} }
func (m *HttpLoggerResponse) String() string            { return proto1.CompactTextString(m) }
func (*HttpLoggerResponse) ProtoMessage()               {}
func (*HttpLoggerResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *HttpLoggerResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *HttpLoggerResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func init() {
	proto1.RegisterType((*HttpLoggerRequest)(nil), "proto.HttpLoggerRequest")
	proto1.RegisterType((*StringArr)(nil), "proto.StringArr")
	proto1.RegisterType((*DateTime)(nil), "proto.DateTime")
	proto1.RegisterType((*MapInterface)(nil), "proto.MapInterface")
	proto1.RegisterType((*HttpLoggerResponse)(nil), "proto.HttpLoggerResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for GoWayCollectAgentService service

type GoWayCollectAgentServiceClient interface {
	HttpLogger(ctx context.Context, in *HttpLoggerRequest, opts ...grpc.CallOption) (*HttpLoggerResponse, error)
}

type goWayCollectAgentServiceClient struct {
	cc *grpc.ClientConn
}

func NewGoWayCollectAgentServiceClient(cc *grpc.ClientConn) GoWayCollectAgentServiceClient {
	return &goWayCollectAgentServiceClient{cc}
}

func (c *goWayCollectAgentServiceClient) HttpLogger(ctx context.Context, in *HttpLoggerRequest, opts ...grpc.CallOption) (*HttpLoggerResponse, error) {
	out := new(HttpLoggerResponse)
	err := grpc.Invoke(ctx, "/proto.GoWayCollectAgentService/HttpLogger", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for GoWayCollectAgentService service

type GoWayCollectAgentServiceServer interface {
	HttpLogger(context.Context, *HttpLoggerRequest) (*HttpLoggerResponse, error)
}

func RegisterGoWayCollectAgentServiceServer(s *grpc.Server, srv GoWayCollectAgentServiceServer) {
	s.RegisterService(&_GoWayCollectAgentService_serviceDesc, srv)
}

func _GoWayCollectAgentService_HttpLogger_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HttpLoggerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoWayCollectAgentServiceServer).HttpLogger(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.GoWayCollectAgentService/HttpLogger",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoWayCollectAgentServiceServer).HttpLogger(ctx, req.(*HttpLoggerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _GoWayCollectAgentService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.GoWayCollectAgentService",
	HandlerType: (*GoWayCollectAgentServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "HttpLogger",
			Handler:    _GoWayCollectAgentService_HttpLogger_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "messages.proto",
}

func init() { proto1.RegisterFile("messages.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 610 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x53, 0xcd, 0x6f, 0xd3, 0x4e,
	0x10, 0xfd, 0x39, 0x69, 0x5a, 0x7b, 0xf2, 0xd1, 0x76, 0x7f, 0x08, 0x6d, 0x83, 0x90, 0xd2, 0x54,
	0x20, 0x9f, 0x7a, 0x28, 0x17, 0x04, 0x02, 0xd4, 0x16, 0x44, 0x2b, 0x51, 0xa9, 0x72, 0x41, 0x1c,
	0xa3, 0xad, 0x3d, 0x24, 0x56, 0x6d, 0xaf, 0xd9, 0x5d, 0x57, 0xf2, 0x85, 0xff, 0x9a, 0x3b, 0xda,
	0xd9, 0x75, 0x3f, 0x80, 0x1e, 0x38, 0x65, 0xe6, 0xed, 0xcc, 0xe4, 0xbd, 0x99, 0x67, 0x98, 0x94,
	0xa8, 0xb5, 0x58, 0xa2, 0xde, 0xaf, 0x95, 0x34, 0x92, 0x0d, 0xe8, 0x67, 0xfe, 0x73, 0x00, 0xdb,
	0x27, 0xc6, 0xd4, 0x9f, 0xe4, 0x72, 0x89, 0x2a, 0xc1, 0xef, 0x0d, 0x6a, 0xc3, 0x9e, 0x40, 0x74,
	0x29, 0x34, 0x2e, 0x6a, 0x61, 0x56, 0x3c, 0x98, 0x05, 0x71, 0x94, 0x84, 0x16, 0x38, 0x17, 0x66,
	0xc5, 0x76, 0x61, 0x84, 0x85, 0xa8, 0x35, 0x66, 0x0b, 0x93, 0x97, 0xc8, 0x7b, 0xb3, 0x20, 0xee,
	0x25, 0x43, 0x8f, 0x7d, 0xce, 0x4b, 0x64, 0x0c, 0xd6, 0x56, 0x52, 0x1b, 0xde, 0xa7, 0x56, 0x8a,
	0xd9, 0x04, 0x7a, 0x79, 0xcd, 0xd7, 0x08, 0xe9, 0xe5, 0x35, 0x7b, 0x0c, 0xeb, 0x25, 0x9a, 0x95,
	0xcc, 0xf8, 0x80, 0x30, 0x9f, 0xd9, 0xf1, 0xca, 0xd1, 0x58, 0x5c, 0xca, 0xac, 0xe5, 0xeb, 0xb3,
	0x20, 0x1e, 0x25, 0x43, 0x8f, 0x1d, 0xc9, 0xac, 0x65, 0xcf, 0x60, 0xd2, 0x95, 0xac, 0x50, 0x64,
	0xa8, 0xf8, 0xc6, 0xac, 0x1f, 0x47, 0xc9, 0xd8, 0xa3, 0x27, 0x04, 0x32, 0x0e, 0x1b, 0xd7, 0xa8,
	0x74, 0x2e, 0x2b, 0x1e, 0xd2, 0x5f, 0x74, 0x29, 0xdb, 0x82, 0x7e, 0xa3, 0x72, 0x1e, 0x11, 0x6a,
	0x43, 0x36, 0x85, 0x90, 0x16, 0x92, 0xca, 0x82, 0x83, 0x13, 0xdc, 0xe5, 0x6c, 0x0f, 0xd6, 0x48,
	0xe8, 0x70, 0x16, 0xc4, 0xc3, 0x83, 0x4d, 0xb7, 0xc0, 0xfd, 0xf7, 0xc2, 0xa0, 0x15, 0x9b, 0xd0,
	0xa3, 0x1d, 0x79, 0x85, 0x2d, 0x1f, 0xb9, 0x91, 0x57, 0xd8, 0xb2, 0x3d, 0x18, 0x2b, 0xd4, 0xb5,
	0xac, 0x34, 0x3a, 0x25, 0x63, 0x52, 0x32, 0xea, 0x40, 0x92, 0xf2, 0x14, 0xa0, 0x93, 0x92, 0x67,
	0x7c, 0x42, 0xdd, 0x91, 0x47, 0x4e, 0x33, 0x76, 0x02, 0x50, 0x2b, 0x59, 0xa3, 0x32, 0x39, 0x6a,
	0xbe, 0x39, 0xeb, 0xc7, 0xc3, 0x83, 0xd8, 0x13, 0xf8, 0xe3, 0x6c, 0xfb, 0xe7, 0x37, 0xa5, 0x1f,
	0x2a, 0xa3, 0xda, 0xe4, 0x4e, 0xaf, 0x3d, 0x89, 0x11, 0x4b, 0xcd, 0xb7, 0x68, 0x53, 0x14, 0xdb,
	0x13, 0x68, 0x23, 0x4c, 0xa3, 0xf9, 0xb6, 0x3b, 0x81, 0xcb, 0xec, 0x09, 0x34, 0xaa, 0xeb, 0x3c,
	0xf5, 0x0e, 0x60, 0xf4, 0x3a, 0xf4, 0x18, 0x99, 0xe0, 0x08, 0xc2, 0x12, 0x8d, 0xc8, 0x84, 0x11,
	0xfc, 0x7f, 0xa2, 0xf5, 0xfc, 0x41, 0x5a, 0x67, 0xbe, 0xd0, 0x91, 0xba, 0xe9, 0x9b, 0xbe, 0x81,
	0xcd, 0xdf, 0x18, 0x77, 0x5b, 0x0c, 0x6e, 0xb7, 0xf8, 0x08, 0x06, 0xd7, 0xa2, 0x68, 0x9c, 0xcd,
	0xa2, 0xc4, 0x25, 0xaf, 0x7a, 0x2f, 0x83, 0xe9, 0x6b, 0x18, 0xdf, 0x9b, 0xfc, 0x2f, 0xcd, 0xf3,
	0x5d, 0x88, 0x2e, 0x8c, 0xca, 0xab, 0xe5, 0xa1, 0x52, 0xb7, 0x65, 0x01, 0x2d, 0xc7, 0x25, 0xf3,
	0x1f, 0x10, 0x76, 0x37, 0xb6, 0xdb, 0x6b, 0x51, 0x28, 0x3f, 0x9b, 0x62, 0xdb, 0x55, 0xca, 0xca,
	0xac, 0xba, 0xe1, 0x94, 0x58, 0x12, 0x99, 0x68, 0xbd, 0xf3, 0x6d, 0xe8, 0x3e, 0x86, 0x46, 0x79,
	0xeb, 0x53, 0x6c, 0xab, 0xca, 0xbc, 0xf2, 0xce, 0xb7, 0xa1, 0x45, 0x34, 0xa6, 0xe4, 0xf6, 0x28,
	0xb1, 0xe1, 0xfc, 0x1d, 0x8c, 0xce, 0x44, 0x7d, 0x5a, 0x19, 0x54, 0xdf, 0x44, 0x8a, 0x6c, 0x07,
	0x42, 0xd3, 0xd6, 0xb8, 0x68, 0x54, 0xe1, 0x79, 0x6c, 0xd8, 0xfc, 0x8b, 0x2a, 0xee, 0xeb, 0x1c,
	0x75, 0x02, 0xde, 0x02, 0xbb, 0x7b, 0x0c, 0xe7, 0x3a, 0xfa, 0x0e, 0x33, 0x3f, 0xa0, 0x97, 0x67,
	0xf6, 0x2b, 0xd1, 0x4d, 0x9a, 0xa2, 0xd6, 0xd4, 0x1d, 0x26, 0x5d, 0x7a, 0xb0, 0x00, 0xfe, 0x51,
	0x7e, 0x15, 0xed, 0xb1, 0x2c, 0x0a, 0x4c, 0xcd, 0xe1, 0x12, 0x2b, 0x73, 0xe1, 0x3c, 0xc0, 0x8e,
	0x01, 0x6e, 0x67, 0x33, 0xfe, 0xd0, 0xed, 0xa7, 0x3b, 0x7f, 0x79, 0x71, 0x44, 0xe6, 0xff, 0x5d,
	0xae, 0xd3, 0xdb, 0x8b, 0x5f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xf8, 0xe1, 0xbe, 0x72, 0x9c, 0x04,
	0x00, 0x00,
}
